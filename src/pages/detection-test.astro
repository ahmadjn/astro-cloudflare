---
// detection-test.astro - Halaman test untuk menampilkan data detection lengkap
---

<html lang="id">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Detection Test - Astro Cloudflare</title>
    <style>
      body {
        font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
          sans-serif;
        line-height: 1.6;
        margin: 0;
        padding: 20px;
        background: #f5f5f5;
      }

      .container {
        max-width: 1200px;
        margin: 0 auto;
        background: white;
        padding: 30px;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
      }

      h1 {
        color: #333;
        text-align: center;
        margin-bottom: 30px;
      }

      .detection-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
      }

      .detection-card {
        background: #f8f9fa;
        padding: 20px;
        border-radius: 8px;
        border-left: 4px solid #007bff;
      }

      .detection-card.bot {
        border-left-color: #dc3545;
        background: #fff5f5;
      }

      .detection-card.human {
        border-left-color: #28a745;
        background: #f8fff8;
      }

      .detection-card.mobile {
        border-left-color: #ffc107;
        background: #fffbf0;
      }

      .detection-card.tablet {
        border-left-color: #17a2b8;
        background: #f0f8ff;
      }

      .detection-card.smartphone {
        border-left-color: #fd7e14;
        background: #fff8f0;
      }

      .detection-card.ai-bot {
        border-left-color: #6f42c1;
        background: #f8f0ff;
      }

      .detection-card.crawler {
        border-left-color: #20c997;
        background: #f0fff8;
      }

      .status {
        font-size: 1.2em;
        font-weight: bold;
        margin-bottom: 10px;
      }

      .status.bot {
        color: #dc3545;
      }
      .status.human {
        color: #28a745;
      }
      .status.mobile {
        color: #ffc107;
      }
      .status.tablet {
        color: #17a2b8;
      }
      .status.smartphone {
        color: #fd7e14;
      }
      .status.ai-bot {
        color: #6f42c1;
      }
      .status.crawler {
        color: #20c997;
      }

      .data-item {
        margin: 8px 0;
        padding: 8px;
        background: white;
        border-radius: 4px;
        font-family: monospace;
        font-size: 0.9em;
      }

      .data-label {
        font-weight: bold;
        color: #666;
      }

      .data-value {
        color: #333;
      }

      .data-value.true {
        color: #28a745;
      }
      .data-value.false {
        color: #dc3545;
      }
      .data-value.null {
        color: #6c757d;
      }

      .interactive-section {
        margin-top: 30px;
        padding: 20px;
        background: #e9ecef;
        border-radius: 8px;
      }

      .button {
        background: #007bff;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
        cursor: pointer;
        margin: 5px;
        font-size: 14px;
      }

      .button:hover {
        background: #0056b3;
      }

      .button.secondary {
        background: #6c757d;
      }

      .button.secondary:hover {
        background: #545b62;
      }

      .log {
        background: #f8f9fa;
        border: 1px solid #dee2e6;
        border-radius: 5px;
        padding: 15px;
        margin-top: 15px;
        max-height: 200px;
        overflow-y: auto;
        font-family: monospace;
        font-size: 0.8em;
      }

      .no-data {
        text-align: center;
        color: #6c757d;
        font-style: italic;
        padding: 40px;
      }
    </style>
  </head>
  <body>
    <div class="container">
      <h1>üîç User Detection Test</h1>

      <div id="detection-content">
        <div class="no-data">Loading detection data...</div>
      </div>

      <div class="interactive-section">
        <h3>üß™ Interactive Testing</h3>
        <button class="button" onclick="refreshDetection()"
          >üîÑ Refresh Detection</button
        >
        <button class="button secondary" onclick="clearData()"
          >üóëÔ∏è Clear Data</button
        >
        <button class="button secondary" onclick="showLog()">üìã Show Log</button
        >

        <div id="log" class="log" style="display: none;"></div>
      </div>
    </div>

    <script>
      // Fungsi untuk menampilkan data detection
      function displayDetectionData() {
        const data = window.getDetectionData ? window.getDetectionData() : null;
        const container = document.getElementById("detection-content");

        if (!data) {
          container.innerHTML = `
                <div class="no-data">
                    <h3>üì° No Detection Data Available</h3>
                    <p>Detection data belum tersedia atau tidak dapat diakses.</p>
                    <p>Pastikan Cloudflare Function berjalan dengan benar.</p>
                </div>
            `;
          return;
        }

        let html = '<div class="detection-grid">';

        // Bot Detection Card
        html += `
            <div class="detection-card ${data.isBot ? "bot" : "human"}">
                <div class="status ${data.isBot ? "bot" : "human"}">
                    ${data.isBot ? "ü§ñ Bot Detected" : "üë§ Human User"}
                </div>
                <div class="data-item">
                    <span class="data-label">Is Bot:</span>
                    <span class="data-value ${data.isBot ? "true" : "false"}">${data.isBot ? "Yes" : "No"}</span>
                </div>
                <div class="data-item">
                    <span class="data-label">Is AI Bot:</span>
                    <span class="data-value ${data.isAIBot ? "true" : "false"}">${data.isAIBot ? "Yes" : "No"}</span>
                </div>
                <div class="data-item">
                    <span class="data-label">Is Crawler:</span>
                    <span class="data-value ${data.isCrawler ? "true" : "false"}">${data.isCrawler ? "Yes" : "No"}</span>
                </div>
                <div class="data-item">
                    <span class="data-label">Is Client Bot:</span>
                    <span class="data-value ${data.isClientBot ? "true" : "false"}">${data.isClientBot ? "Yes" : "No"}</span>
                </div>
                <div class="data-item">
                    <span class="data-label">Is Low Threat Score:</span>
                    <span class="data-value ${data.isLowThreatScore ? "true" : "false"}">${data.isLowThreatScore ? "Yes" : "No"}</span>
                </div>
                <div class="data-item">
                    <span class="data-label">Is Verified Bot:</span>
                    <span class="data-value ${data.isVerifiedBot ? "true" : "false"}">${data.isVerifiedBot ? "Yes" : "No"}</span>
                </div>
            </div>
        `;

        // Device Detection Card
        html += `
            <div class="detection-card ${data.isMobile ? "mobile" : ""} ${data.isTablet ? "tablet" : ""} ${data.isSmartphone ? "smartphone" : ""}">
                <div class="status ${data.isMobile ? "mobile" : ""} ${data.isTablet ? "tablet" : ""} ${data.isSmartphone ? "smartphone" : ""}">
                    ${data.isSmartphone ? "üì± Smartphone" : data.isTablet ? "üì± Tablet" : data.isMobile ? "üì± Mobile" : "üíª Desktop"}
                </div>
                <div class="data-item">
                    <span class="data-label">Is Mobile:</span>
                    <span class="data-value ${data.isMobile ? "true" : "false"}">${data.isMobile ? "Yes" : "No"}</span>
                </div>
                <div class="data-item">
                    <span class="data-label">Is Tablet:</span>
                    <span class="data-value ${data.isTablet ? "true" : "false"}">${data.isTablet ? "Yes" : "No"}</span>
                </div>
                <div class="data-item">
                    <span class="data-label">Is Smartphone:</span>
                    <span class="data-value ${data.isSmartphone ? "true" : "false"}">${data.isSmartphone ? "Yes" : "No"}</span>
                </div>
            </div>
        `;

        // Detection Summary Card
        html += `
            <div class="detection-card">
                <div class="status">üìä Detection Summary</div>
                <div class="data-item">
                    <span class="data-label">Total Detections:</span>
                    <span class="data-value">${Object.values(data).filter((v) => v === true).length} / ${Object.keys(data).length}</span>
                </div>
                <div class="data-item">
                    <span class="data-label">Bot Detections:</span>
                    <span class="data-value">${[data.isBot, data.isAIBot, data.isCrawler, data.isClientBot, data.isLowThreatScore, data.isVerifiedBot].filter((v) => v === true).length} / 6</span>
                </div>
                <div class="data-item">
                    <span class="data-label">Device Detections:</span>
                    <span class="data-value">${[data.isMobile, data.isTablet, data.isSmartphone].filter((v) => v === true).length} / 3</span>
                </div>
            </div>
        `;

        html += "</div>";

        container.innerHTML = html;
      }

      // Fungsi untuk refresh detection
      function refreshDetection() {
        console.log("üîÑ Refreshing detection data...");
        if (window.handleUserDetection) {
          window.handleUserDetection();
        }
        displayDetectionData();
      }

      // Fungsi untuk clear data
      function clearData() {
        console.log("üóëÔ∏è Clearing detection data...");
        try {
          localStorage.removeItem("userDetectionData");
          console.log("‚úÖ Detection data cleared from localStorage");
        } catch (e) {
          console.warn("‚ùå Could not clear detection data:", e);
        }
        displayDetectionData();
      }

      // Fungsi untuk show log
      function showLog() {
        const logDiv = document.getElementById("log");
        if (logDiv.style.display === "none") {
          logDiv.style.display = "block";
          logDiv.innerHTML = `
                    <strong>Console Log:</strong><br>
                    Detection Data: ${JSON.stringify(window.getDetectionData ? window.getDetectionData() : null, null, 2)}<br><br>
                    <strong>Window Variables:</strong><br>
                    IS_BOT: ${typeof window.IS_BOT !== "undefined" ? window.IS_BOT : "undefined"}<br>
                    IS_MOBILE: ${typeof window.IS_MOBILE !== "undefined" ? window.IS_MOBILE : "undefined"}<br>
                    IS_TABLET: ${typeof window.IS_TABLET !== "undefined" ? window.IS_TABLET : "undefined"}<br>
                    IS_SMARTPHONE: ${typeof window.IS_SMARTPHONE !== "undefined" ? window.IS_SMARTPHONE : "undefined"}<br>
                    IS_AI_BOT: ${typeof window.IS_AI_BOT !== "undefined" ? window.IS_AI_BOT : "undefined"}<br>
                    IS_CRAWLER: ${typeof window.IS_CRAWLER !== "undefined" ? window.IS_CRAWLER : "undefined"}<br>
                    DETECTION_REASON: ${typeof window.DETECTION_REASON !== "undefined" ? window.DETECTION_REASON : "undefined"}
                `;
        } else {
          logDiv.style.display = "none";
        }
      }

      // Event listeners untuk detection events
      window.addEventListener("botUserDetected", function (event) {
        console.log("ü§ñ Bot user detected event:", event.detail);
        displayDetectionData();
      });

      window.addEventListener("humanUserDetected", function (event) {
        console.log("üë§ Human user detected event:", event.detail);
        displayDetectionData();
      });

      window.addEventListener("mobileDeviceDetected", function (event) {
        console.log("üì± Mobile device detected event:", event.detail);
        displayDetectionData();
      });

      window.addEventListener("tabletDeviceDetected", function (event) {
        console.log("üì± Tablet device detected event:", event.detail);
        displayDetectionData();
      });

      window.addEventListener("smartphoneDeviceDetected", function (event) {
        console.log("üì± Smartphone device detected event:", event.detail);
        displayDetectionData();
      });

      // Initialize display
      document.addEventListener("DOMContentLoaded", function () {
        console.log("üöÄ Detection test page loaded");
        setTimeout(displayDetectionData, 1000); // Wait for detection to load
      });

      // Refresh display every 5 seconds to catch updates
      setInterval(displayDetectionData, 5000);
    </script>
  </body>
</html>
