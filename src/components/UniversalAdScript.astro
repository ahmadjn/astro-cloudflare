---
// Universal Ad Script Component
// Handles ad loading and retry logic for all pages except landing
---

<script>
  (function () {
    "use strict";

    // ===================================================================================
    // MODULE: UTILITIES & KONFIGURASI
    // Deskripsi: Konfigurasi inti untuk logika percobaan ulang dan URL cadangan.
    // ===================================================================================
    const utils = {
      consoleStyles: {
        progress:
          "color: #00ffff; background: linear-gradient(45deg, #0c4a6e, #075985); padding: 2px 6px; border-radius: 4px; font-weight: bold;",
        process:
          "color: #ffd700; background: linear-gradient(45deg, #92400e, #b45309); padding: 2px 6px; border-radius: 4px; font-weight: bold;",
        info: "color: #87ceeb; background: linear-gradient(45deg, #1e40af, #3b82f6); padding: 2px 6px; border-radius: 4px; font-weight: bold;",
        success:
          "color: #90ee90; background: linear-gradient(45deg, #166534, #22c55e); padding: 2px 6px; border-radius: 4px; font-weight: bold;",
        error:
          "color: #ffb6c1; background: linear-gradient(45deg, #991b1b, #dc2626); padding: 2px 6px; border-radius: 4px; font-weight: bold;",
      },
    };

    const config = {
      // ID elemen div tempat iklan akan ditampilkan.
      ADX_SLOT_ID: "admanager-display-ad",
      // Durasi waktu tunggu (dalam milidetik) untuk setiap percobaan.
      RETRY_TIMEOUTS: [5000, 3000, 3000],
      // URL yang akan menjadi tujuan tombol "kembali" browser jika pengguna menekan kembali.
      BACK_URL_1: "/premium-access?gad_source=5",
    };

    // ===================================================================================
    // MODULE: STATE MANAGEMENT
    // Deskripsi: Menyimpan status saat ini dari proses pemuatan iklan.
    // ===================================================================================
    const state = {
      decisionMade: false,
      adxAttemptCount: 0,
      adxRetryTimer: null,
      adSlotObject: null,
    };

    // ===================================================================================
    // MODULE: MANAJEMEN IKLAN (Retry Logic)
    // Deskripsi: Logika utama untuk menangani pemuatan, percobaan ulang, dan kegagalan iklan.
    // ===================================================================================
    const adManager = {
      init() {
        console.log(
          "%c[ADS] Initializing AdX with Retry Logic...",
          utils.consoleStyles.info
        );
        // Menunggu googletag siap, lalu memulai proses
        googletag.cmd.push(() => {
          // Cari slot yang sudah didefinisikan di <head>
          const allSlots = googletag.pubads().getSlots();
          state.adSlotObject = allSlots.find(
            (slot) => slot.getSlotElementId() === config.ADX_SLOT_ID
          );

          if (!state.adSlotObject) {
            console.error(
              `%c[ADS] Ad slot with ID '${config.ADX_SLOT_ID}' not found.`,
              utils.consoleStyles.error
            );
            return;
          }

          // Siapkan listener untuk hasil render iklan
          googletag
            .pubads()
            .addEventListener(
              "slotRenderEnded",
              this.handleSlotRender.bind(this)
            );

          // Mulai percobaan pertama. Permintaan awal sudah dibuat oleh googletag.display() di HTML.
          // Kita hanya perlu menyetel timeout untuknya.
          this.startAttemptTimeout();
        });
      },

      handleSlotRender(event) {
        if (state.decisionMade) return;
        if (event.slot.getSlotElementId() !== config.ADX_SLOT_ID) return;

        // Jika ada respons, batalkan timeout untuk percobaan saat ini
        clearTimeout(state.adxRetryTimer);
        state.adxAttemptCount++;

        // Jika slot terisi (sukses)
        if (!event.isEmpty) {
          console.log(
            `%c[ADS] AdX FILLED on attempt #${state.adxAttemptCount}. Process complete.`,
            utils.consoleStyles.success
          );
          state.decisionMade = true;
        }
        // Jika slot kosong, coba lagi (jika masih ada jatah)
        else {
          console.log(
            `%c[ADS] AdX UNFILLED on attempt #${state.adxAttemptCount}.`,
            utils.consoleStyles.error
          );
          this.tryNextAttempt();
        }
      },

      tryNextAttempt() {
        if (state.adxAttemptCount >= config.RETRY_TIMEOUTS.length) {
          console.log(
            "%c[ADS] All retry attempts failed. Hiding ad container.",
            utils.consoleStyles.error
          );
          state.decisionMade = true;
          // Sembunyikan kontainer iklan karena semua percobaan gagal.
          const adContainer = document.getElementById(config.ADX_SLOT_ID);
          if (adContainer) {
            adContainer.style.display = "none";
          }
          return;
        }

        console.log(
          `%c[ADS] Starting attempt #${state.adxAttemptCount + 1}...`,
          utils.consoleStyles.process
        );
        this.startAttemptTimeout();
        googletag.pubads().refresh([state.adSlotObject]);
      },

      startAttemptTimeout() {
        const currentAttemptIndex = state.adxAttemptCount;
        const timeoutDuration = config.RETRY_TIMEOUTS[currentAttemptIndex];

        state.adxRetryTimer = setTimeout(() => {
          console.log(
            `%c[ADS] Attempt #${currentAttemptIndex + 1} TIMED OUT after ${timeoutDuration / 1000}s.`,
            utils.consoleStyles.error
          );
          state.adxAttemptCount++;
          this.tryNextAttempt();
        }, timeoutDuration);
      },
    };

    /**
     * Mengubah riwayat browser untuk mengatur URL 'kembali' kustom.
     * Fungsi ini harus dijalankan sesegera mungkin saat halaman dimuat.
     */
    const navigationManager = {
      isRedirecting: false,
      init() {
        try {
          history.pushState({ trap: "on" }, "", window.location.href);
          window.addEventListener("popstate", this.handlePopState.bind(this));
        } catch (e) {
          console.error("Failed to init back-button trap", e);
        }
      },
      handlePopState(e) {
        if (this.isRedirecting) return;
        // Selalu coba redirect jika popstate terjadi
        this.isRedirecting = true;
        history.pushState({ trap: "on" }, "", window.location.href);
        window.location.replace(config.BACK_URL_1);
      },
    };

    // ===================================================================================
    // INISIALISASI
    // ===================================================================================
    document.addEventListener("DOMContentLoaded", () => {
      // LANGKAH 1: Atur URL 'kembali' kustom segera setelah halaman siap.
      navigationManager.init();

      // LANGKAH 2: Mulai logika percobaan ulang iklan.
      adManager.init();
    });
  })();
</script>
