---
// BotDetection.astro - Komponen untuk menangani data user detection (bot, mobile, tablet, etc.)
---

<script>
  // Fungsi untuk menangani user detection
  function handleUserDetection() {
    // Cek apakah data detection tersedia
    if (typeof window.DETECTION_DATA !== "undefined") {
      console.log("üîç User Detection Data:", window.DETECTION_DATA);

      const data = window.DETECTION_DATA;

      // Tambahkan class ke body berdasarkan status
      if (data.isBot) {
        document.body.classList.add("bot-user");

        if (data.isAIBot) {
          document.body.classList.add("ai-bot");
        }

        if (data.isCrawler) {
          document.body.classList.add("crawler");
        }

        if (data.isClientBot) {
          document.body.classList.add("client-bot");
        }

        if (data.isLowThreatScore) {
          document.body.classList.add("low-threat-score");
        }

        if (data.isVerifiedBot) {
          document.body.classList.add("verified-bot");
        }

        // Dispatch custom event untuk bot
        window.dispatchEvent(
          new CustomEvent("botUserDetected", {
            detail: data,
          })
        );

        console.log("ü§ñ Bot detected");
      } else {
        document.body.classList.add("human-user");

        // Dispatch custom event untuk human
        window.dispatchEvent(
          new CustomEvent("humanUserDetected", {
            detail: data,
          })
        );

        console.log("üë§ Human user detected");
      }

      // Device detection classes
      if (data.isMobile) {
        document.body.classList.add("mobile-device");
      }

      if (data.isTablet) {
        document.body.classList.add("tablet-device");
      }

      if (data.isSmartphone) {
        document.body.classList.add("smartphone-device");
      }

      // Dispatch device events
      if (data.isMobile) {
        window.dispatchEvent(
          new CustomEvent("mobileDeviceDetected", {
            detail: {
              isMobile: data.isMobile,
              isTablet: data.isTablet,
              isSmartphone: data.isSmartphone,
            },
          })
        );
      }

      if (data.isTablet) {
        window.dispatchEvent(
          new CustomEvent("tabletDeviceDetected", {
            detail: {
              isMobile: data.isMobile,
              isTablet: data.isTablet,
              isSmartphone: data.isSmartphone,
            },
          })
        );
      }

      if (data.isSmartphone) {
        window.dispatchEvent(
          new CustomEvent("smartphoneDeviceDetected", {
            detail: {
              isMobile: data.isMobile,
              isTablet: data.isTablet,
              isSmartphone: data.isSmartphone,
            },
          })
        );
      }

      // Simpan data detection ke localStorage untuk referensi
      try {
        localStorage.setItem("userDetectionData", JSON.stringify(data));
      } catch (e) {
        console.warn("Could not save detection data to localStorage");
      }
    } else {
      console.log("üì° No detection data available");
      document.body.classList.add("no-detection-data");
    }
  }

  // Fungsi untuk mendapatkan data detection
  function getDetectionData() {
    if (typeof window.DETECTION_DATA !== "undefined") {
      return window.DETECTION_DATA;
    }

    // Coba ambil dari localStorage
    try {
      const stored = localStorage.getItem("userDetectionData");
      if (stored) {
        return JSON.parse(stored);
      }
    } catch (e) {
      console.warn("Could not retrieve detection data from localStorage");
    }

    return null;
  }

  // Fungsi untuk cek status user
  function isBot() {
    return typeof window.IS_BOT !== "undefined" ? window.IS_BOT : false;
  }

  function isMobile() {
    return typeof window.IS_MOBILE !== "undefined" ? window.IS_MOBILE : false;
  }

  function isTablet() {
    return typeof window.IS_TABLET !== "undefined" ? window.IS_TABLET : false;
  }

  function isSmartphone() {
    return typeof window.IS_SMARTPHONE !== "undefined"
      ? window.IS_SMARTPHONE
      : false;
  }

  function isAIBot() {
    return typeof window.IS_AI_BOT !== "undefined" ? window.IS_AI_BOT : false;
  }

  function isCrawler() {
    return typeof window.IS_CRAWLER !== "undefined" ? window.IS_CRAWLER : false;
  }

  function isClientBot() {
    return typeof window.IS_CLIENT_BOT !== "undefined"
      ? window.IS_CLIENT_BOT
      : false;
  }

  function isLowThreatScore() {
    return typeof window.IS_LOW_THREAT_SCORE !== "undefined"
      ? window.IS_LOW_THREAT_SCORE
      : false;
  }

  function isVerifiedBot() {
    return typeof window.IS_VERIFIED_BOT !== "undefined"
      ? window.IS_VERIFIED_BOT
      : false;
  }

  // Expose functions ke global scope
  window.handleUserDetection = handleUserDetection;
  window.getDetectionData = getDetectionData;
  window.isBot = isBot;
  window.isMobile = isMobile;
  window.isTablet = isTablet;
  window.isSmartphone = isSmartphone;
  window.isAIBot = isAIBot;
  window.isCrawler = isCrawler;
  window.isClientBot = isClientBot;
  window.isLowThreatScore = isLowThreatScore;
  window.isVerifiedBot = isVerifiedBot;

  // Jalankan detection saat DOM ready
  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", handleUserDetection);
  } else {
    handleUserDetection();
  }

  // Listen untuk event userDetected dari Cloudflare Function
  window.addEventListener("userDetected", function (event) {
    console.log("üéØ User detection event received:", event.detail);
    handleUserDetection();
  });
</script>
